/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/index.scss */ \"./src/styles/index.scss\");\n// import { random } from \"core-js/core/number\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  class DisplayMountain {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      let slopeSlider = document.getElementById(\"slope\");\n      let slopeValue = slopeSlider.value;\n      this.slopeVal = Number.parseInt(slopeValue);\n      this.drawMountain();\n    }\n\n    drawMountain() {\n      let peak = this.canvas.height / 3;\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, 2 / 3 * this.canvas.height);\n      this.ctx.lineTo(this.canvas.width / 5, peak);\n      this.ctx.lineTo(-6 * this.slopeVal + this.canvas.width, this.canvas.height);\n      this.ctx.lineTo(0, this.canvas.height);\n      this.ctx.fill();\n    }\n\n  }\n\n  class DisplaySnow {\n    constructor(slopeVal) {\n      this.canvas = document.getElementById(\"snow-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      let snowSlider = document.getElementById(\"snow\");\n      let snowValue = snowSlider.value;\n      this.snowVal = Number.parseInt(snowValue);\n      this.slopeVal = slopeVal;\n      this.drawSnow();\n    }\n\n    drawSnow() {\n      let peak = this.canvas.height / 3;\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, 2 / 3 * this.canvas.height - this.snowVal); //Slope Description\n\n      if (this.slopeVal > 70 && this.slopeVal <= 75) {\n        this.snowVal /= 1.5;\n      } else if (this.slopeVal > 75 && this.slopeVal <= 80) {\n        this.snowVal /= 2;\n      } else if (this.slopeVal > 80) {\n        this.snowVal /= 2.5;\n      } else if (this.slopeVal < 30) {}\n\n      this.ctx.lineTo(this.canvas.width / 5, peak - this.snowVal);\n      this.ctx.lineTo(-6 * this.slopeVal + this.canvas.width, this.canvas.height - this.snowVal);\n      this.ctx.lineTo(-6 * this.slopeVal + this.canvas.width + 6, this.canvas.height);\n      this.ctx.lineTo(-6 * this.slopeVal + this.canvas.width, this.canvas.height);\n      this.ctx.lineTo(this.canvas.width / 5, peak);\n      this.ctx.lineTo(0, 2 / 3 * this.canvas.height);\n      this.ctx.lineTo(0, 2 / 3 * this.canvas.height - this.snowVal);\n      this.ctx.fillStyle = 'white';\n      this.ctx.fill();\n      this.ctx.stroke();\n    }\n\n  }\n\n  class DisplayWind {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.windArray = [];\n      this.x = 0;\n      this.y = 0;\n      this.rotation = 0;\n      this.drawWind();\n      this.gravity = 5;\n    }\n\n    drawWind() {\n      let windSlider = document.getElementById(\"windspeed\");\n      this.windValue = Number.parseInt(windSlider.value); // let peak = this.canvas.height / 3;\n      // for(let i =0;i<(this.windValue/2);i++){\n      //     let y = Math.random()*100;\n      //     this.ctx.beginPath();\n      //     this.ctx.moveTo(this.x,y);\n      //     this.ctx.lineTo(this.windValue*5 + this.x, y)\n      //     this.ctx.stroke();\n      // }\n      // this.x+=this.windValue/10;\n\n      if (this.windValue > 10) {\n        let y = Math.random() * 4 - 7;\n        this.ctx.moveTo(0, 50);\n        this.ctx.lineTo(150 + this.windValue / 2, 50 + y * this.windValue / 20);\n        this.ctx.moveTo(0, 100);\n        this.ctx.lineTo(100 + this.windValue / 2, 100 + y * this.windValue / 20);\n        this.ctx.moveTo(0, 150);\n        this.ctx.lineTo(50 + this.windValue / 1.5, 150 + y * this.windValue / 20);\n        this.ctx.moveTo(0, 200);\n        this.ctx.lineTo(this.windValue, 200 + y * this.windValue / 20);\n        this.ctx.stroke();\n      } // this.x += this.windValue/3\n      // if (this.windValue * 5 + this.x > 1160){\n      //     this.x = 0;\n      // }\n\n    }\n\n  }\n\n  class DisplayPrecipitation {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.particlesArray = [];\n      this.createSnowflakes();\n    }\n\n    drawPrec(windValue, tempValue) {\n      let precValue = document.getElementById(\"prec-true\").checked;\n\n      for (let i = 0; i < this.particlesArray.length; i++) {\n        if (precValue && tempValue <= 35) {\n          this.ctx.beginPath();\n          this.ctx.arc(this.particlesArray[i].x, this.particlesArray[i].y, this.particlesArray[i].radius, 0, Math.PI * 2, false);\n          this.ctx.fill();\n          this.particlesArray[i].y += this.particlesArray[i].speedY;\n          this.particlesArray[i].x += windValue / 20;\n        } else if (precValue && tempValue > 35) {\n          this.ctx.beginPath();\n          this.ctx.moveTo(this.particlesArray[i].x, this.particlesArray[i].y);\n          this.ctx.lineTo(this.particlesArray[i].x, this.particlesArray[i].y + 8);\n          this.ctx.stroke();\n          this.particlesArray[i].y += 5;\n          this.particlesArray[i].x += windValue / 50;\n        }\n\n        if (this.particlesArray[i].y > this.canvas.height) {\n          this.particlesArray[i].y = Math.random(0, 10);\n        }\n\n        if (this.particlesArray[i].x > this.canvas.width) {\n          this.particlesArray[i].x = Math.random() * this.canvas.width;\n        } //  this.moveSnowflakes();\n\n      }\n    }\n\n    createSnowflakes() {\n      for (let i = 0; i < 200; i++) {\n        this.particlesArray.push({\n          x: Math.random() * this.canvas.width,\n          y: Math.random() * this.canvas.height,\n          speedY: 1,\n          speedX: 2,\n          radius: Math.random() + 1\n        });\n      }\n    } // moveSnowflakes(){\n    //     debugger;\n    //     for(let i = 0;i<this.particlesArray.length;i++){\n    //         this.particlesArray[i] += 0;\n    //         this.particlesArray[i] += 0;\n    //     }\n    // }\n\n\n  }\n\n  class DisplayTemperature {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.tempSlider = document.getElementById(\"temperature\");\n      this.tempValue = Number.parseInt(this.tempSlider.value);\n      this.drawTemp();\n    }\n\n    drawTemp() {\n      this.tempValue = Number.parseInt(this.tempSlider.value);\n    }\n\n  }\n\n  class DisplayWeakLayer {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.weakLayer = false;\n      this.drawLayer();\n    }\n\n    drawLayer(slopeVal, snowVal) {\n      let peak = this.canvas.height / 3;\n      let weakValue = document.getElementById(\"weak-true\");\n      this.weakLayer = weakValue.checked;\n\n      if (this.weakLayer === true) {\n        this.ctx.moveTo(this.canvas.width / 5, peak - snowVal / 2);\n        this.ctx.lineTo(-6 * slopeVal + this.canvas.width, this.canvas.height - snowVal / 2); // this.ctx.lineTo(-6 * this.slopeVal + this.canvas.width, this.canvas.height)\n\n        this.ctx.stroke();\n      }\n    }\n\n  }\n\n  class TextBox {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.createText();\n    }\n\n    createText() {\n      let tempSlider = document.getElementById(\"temperature\");\n      let tempValue = Number.parseInt(tempSlider.value);\n      let windSlider = document.getElementById(\"windspeed\");\n      let windValue = Number.parseInt(windSlider.value);\n      let snowSlider = document.getElementById(\"snow\");\n      let snowValue = Number.parseInt(snowSlider.value);\n      let slopeSlider = document.getElementById(\"slope\");\n      let slopeValue = slopeSlider.value;\n      let weakValue = document.getElementById(\"weak-true\");\n      let weakLayer = weakValue.checked;\n      let precValue = document.getElementById(\"prec-true\").checked;\n\n      if (slopeValue < 30 || slopeValue > 60) {\n        outofrange.style.display = \"flex\";\n        lowsnow.style.display = \"none\";\n        wet.style.display = \"none\";\n        persistent.style.display = \"none\";\n        precipitation.style.display = \"none\";\n        windloaded.style.display = \"none\";\n      } else {\n        outofrange.style.display = \"none\";\n\n        if (snowValue < 10) {\n          outofrange.style.display = \"none\";\n          lowsnow.style.display = \"flex\";\n          wet.style.display = \"none\";\n          persistent.style.display = \"none\";\n          precipitation.style.display = \"none\";\n          windloaded.style.display = \"none\";\n        } else {\n          lowsnow.style.display = \"none\";\n\n          if (weakLayer && tempValue < 40) {\n            persistent.style.display = \"flex\";\n            precipitation.style.display = \"none\";\n            windloaded.style.display = \"none\";\n            wet.style.display = \"none\";\n          } else {\n            persistent.style.display = \"none\";\n\n            if (tempValue > 40) {\n              wet.style.display = \"flex\";\n              persistent.style.display = \"none\";\n              precipitation.style.display = \"none\";\n              windloaded.style.display = \"none\";\n            } else {\n              wet.style.display = \"none\";\n            }\n          }\n\n          if (precValue && tempValue < 35) {\n            persistent.style.display = \"none\";\n            precipitation.style.display = \"flex\";\n            windloaded.style.display = \"none\";\n            wet.style.display = \"none\";\n          } else {\n            precipitation.style.display = \"none\";\n          }\n\n          if (windValue > 30 && tempValue < 40) {\n            persistent.style.display = \"none\";\n            precipitation.style.display = \"none\";\n            windloaded.style.display = \"flex\";\n            wet.style.display = \"none\";\n          } else {\n            windloaded.style.display = \"none\";\n          }\n        }\n      }\n    }\n\n  }\n\n  class DisplayCanvas {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.snowcanvas = document.getElementById(\"snow-canvas\");\n      this.snowctx = this.snowcanvas.getContext('2d');\n      this.animate = this.animate.bind(this);\n      this.windCanvas = new DisplayWind();\n      this.tempCanvas = new DisplayTemperature();\n      this.weakLayer = new DisplayWeakLayer();\n      this.snowflakes = new DisplayPrecipitation();\n      this.textbox = new TextBox();\n    }\n\n    animate() {\n      debugger;\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.snowctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      let mountainCanvas = new DisplayMountain();\n      let snowCanvas = new DisplaySnow(mountainCanvas.slopeVal);\n      this.windCanvas.drawWind();\n      this.tempCanvas.drawTemp();\n      this.textbox.createText();\n      this.weakLayer.drawLayer(mountainCanvas.slopeVal, snowCanvas.snowVal);\n      this.snowflakes.drawPrec(this.windCanvas.windValue, this.tempCanvas.tempValue);\n      requestAnimationFrame(this.animate);\n    }\n\n  }\n\n  let displayCanvas = new DisplayCanvas();\n  displayCanvas.animate(); // let mountainCanvas = new displayMountain;\n  // mountainCanvas.animate();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Kc1Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./src/styles/index.scss":
/*!*******************************!*\
  !*** ./src/styles/index.scss ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2luZGV4LnNjc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vSnNQcm9qZWN0Ly4vc3JjL3N0eWxlcy9pbmRleC5zY3NzP2FlOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;