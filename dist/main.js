/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/DisplayMountain.js":
/*!********************************!*\
  !*** ./src/DisplayMountain.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass DisplayMountain {\n  constructor() {\n    this.canvas = document.getElementById(\"display-canvas\");\n    this.ctx = this.canvas.getContext('2d');\n    let img = document.getElementById(\"mountainPicture\");\n    this.pattern = this.ctx.createPattern(img, 'repeat');\n    let slopeSlider = document.getElementById(\"slope\");\n    let slopeValue = slopeSlider.value;\n    this.slopeVal = Number.parseInt(slopeValue);\n    this.slope = 2 / 3 * this.canvas.height / (4 / 5 * this.canvas.width - 6 * this.slopeVal);\n    this.drawMountain();\n  }\n\n  drawMountain(snowCanvasBool) {\n    this.slope = 2 / 3 * this.canvas.height / (4 / 5 * this.canvas.width - 6 * this.slopeVal);\n\n    if (!snowCanvasBool) {\n      let slopeSlider = document.getElementById(\"slope\");\n      let slopeValue = slopeSlider.value;\n      this.slopeVal = Number.parseInt(slopeValue);\n    }\n\n    let peak = this.canvas.height / 3;\n    this.ctx.beginPath();\n    this.ctx.moveTo(0, 2 / 3 * this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5, peak);\n    this.ctx.lineTo(-6 * this.slopeVal + this.canvas.width, this.canvas.height);\n    this.ctx.lineTo(0, this.canvas.height); // this.ctx.fillStyle = this.pattern;\n\n    this.ctx.closePath();\n    this.ctx.fillStyle = 'black';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(0, 2 / 3 * this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5, peak);\n    this.ctx.lineTo(this.canvas.width / 5 + 4, peak + 90);\n    this.ctx.lineTo(0, 2 / 3 * this.canvas.height);\n    this.ctx.fillStyle = '#fafafa';\n    this.ctx.closePath();\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5, peak);\n    this.ctx.lineTo(this.canvas.width / 5 + 80 / this.slope, peak + 80);\n    this.ctx.lineTo(this.canvas.width / 5 + 4, peak + 90);\n    this.ctx.fillStyle = '#e3e3e3';\n    this.ctx.closePath();\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(0, 2 / 3 * this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5 + 4, peak + 90);\n    this.ctx.lineTo(this.canvas.width / 5 - 40, peak + 240);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#C0C0C0';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 - 40, peak + 240);\n    this.ctx.lineTo(this.canvas.width / 5 + 80, peak + 160);\n    this.ctx.lineTo(this.canvas.width / 5 + 4, peak + 90);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#808080';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 + 4, peak + 90);\n    this.ctx.lineTo(this.canvas.width / 5 + 80, peak + 160);\n    this.ctx.lineTo(this.canvas.width / 5 + 80 / this.slope, peak + 80);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#696969';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 + 80 / this.slope, peak + 80);\n    this.ctx.lineTo(this.canvas.width / 5 + 240, peak + 240 * this.slope);\n    this.ctx.lineTo(this.canvas.width / 5 + 80, peak + 160);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#808080';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(0, this.canvas.height);\n    this.ctx.lineTo(0, 2 / 3 * this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5 - 40, peak + 240);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#A9A9A9';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(0, this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5 - 40, peak + 240);\n    this.ctx.lineTo(this.canvas.width / 5 + 40, this.canvas.height);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#999999';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 - 40, peak + 240);\n    this.ctx.lineTo(this.canvas.width / 5 + 80, peak + 160);\n    this.ctx.lineTo(this.canvas.width / 5 + 40, this.canvas.height);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#7a7a7a';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 + 40, this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5 + 80, peak + 160);\n    this.ctx.lineTo(this.canvas.width / 5 + 300 - this.slopeVal * 1.5, this.canvas.height);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#636363';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 + 300 - this.slopeVal * 1.5, this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5 + 240, peak + 240 * this.slope);\n    this.ctx.lineTo(this.canvas.width / 5 + 80, peak + 160);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#737373';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 + 300 - this.slopeVal * 1.5, this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5 + 240, peak + 240 * this.slope);\n    this.ctx.lineTo(this.canvas.width / 5 + 400, peak + 400 * this.slope);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#545454';\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.canvas.width / 5 + 300 - this.slopeVal * 1.5, this.canvas.height);\n    this.ctx.lineTo(this.canvas.width / 5 + 400, peak + 400 * this.slope);\n    this.ctx.lineTo(this.canvas.width / 5 + 1000, peak + 1000 * this.slope);\n    this.ctx.closePath();\n    this.ctx.fillStyle = '#4f4f4f';\n    this.ctx.fill();\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DisplayMountain);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/DisplayMountain.js\n");

/***/ }),

/***/ "./src/DisplayPrecipitation.js":
/*!*************************************!*\
  !*** ./src/DisplayPrecipitation.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass DisplayPrecipitation {\n  constructor() {\n    this.canvas = document.getElementById(\"weather-canvas\");\n    this.ctx = this.canvas.getContext('2d');\n    this.particlesArray = [];\n    this.createSnowflakes();\n  }\n\n  drawPrec(windValue, tempValue) {\n    let precValue = document.getElementById(\"prec-true\").checked;\n\n    if (!precValue) {\n      weatherbackdrop.style.visibility = 'hidden';\n      this.ctx.beginPath();\n      this.ctx.arc(this.canvas.width - 100, 100, 30, 0, Math.PI * 2, false);\n      this.ctx.shadowColor = '#feca1d';\n      this.ctx.shadowBlur = Math.random() * (tempValue / 20) + tempValue;\n      this.ctx.fillStyle = '#feca1d';\n      this.ctx.fill();\n    }\n\n    for (let i = 0; i < this.particlesArray.length; i++) {\n      if (precValue && tempValue <= 35) {\n        weatherbackdrop.style.visibility = 'visible';\n        this.ctx.beginPath();\n        this.ctx.arc(this.particlesArray[i].x, this.particlesArray[i].y, this.particlesArray[i].radius, 0, Math.PI * 2, false);\n        this.ctx.fillStyle = 'white';\n        this.ctx.fill();\n        let randCap = Math.random() * 50 + 110;\n\n        if (this.particlesArray[i].x < this.canvas.width / 5 && this.particlesArray[i].y > randCap && windValue > 20) {\n          this.particlesArray[i].y -= this.particlesArray[i].speedY;\n          this.particlesArray[i].x += windValue / 40 + Math.floor(Math.random() * 2);\n        } else {\n          this.particlesArray[i].y += this.particlesArray[i].speedY;\n          this.particlesArray[i].x += windValue / 40 + Math.floor(Math.random() * 2);\n        }\n      } else if (precValue && tempValue > 35) {\n        weatherbackdrop.style.visibility = 'visible';\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.particlesArray[i].x, this.particlesArray[i].y);\n        this.ctx.lineTo(this.particlesArray[i].x, this.particlesArray[i].y + 8);\n        this.ctx.strokeStyle = 'cyan';\n        this.ctx.stroke();\n        this.particlesArray[i].y += 5;\n        this.particlesArray[i].x += windValue / 50;\n      }\n\n      if (this.particlesArray[i].y > this.canvas.height) {\n        this.particlesArray[i].y = Math.random(0, 10);\n      }\n\n      if (this.particlesArray[i].x > this.canvas.width) {\n        this.particlesArray[i].x = Math.random() * this.canvas.width;\n      } //  this.moveSnowflakes();\n\n    }\n  }\n\n  createSnowflakes() {\n    for (let i = 0; i < 300; i++) {\n      this.particlesArray.push({\n        x: Math.random() * this.canvas.width,\n        y: Math.random() * this.canvas.height,\n        speedY: 1,\n        speedX: 2,\n        radius: Math.random() + 1\n      });\n    }\n  } // moveSnowflakes(){\n  //     debugger;\n  //     for(let i = 0;i<this.particlesArray.length;i++){\n  //         this.particlesArray[i] += 0;\n  //         this.particlesArray[i] += 0;\n  //     }\n  // }\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DisplayPrecipitation);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/DisplayPrecipitation.js\n");

/***/ }),

/***/ "./src/DisplayTemperature.js":
/*!***********************************!*\
  !*** ./src/DisplayTemperature.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass DisplayTemperature {\n  constructor() {\n    this.canvas = document.getElementById(\"display-canvas\");\n    this.ctx = this.canvas.getContext('2d');\n    this.tempSlider = document.getElementById(\"temperature\");\n    this.tempValue = Number.parseInt(this.tempSlider.value);\n    this.drawTemp();\n  }\n\n  drawTemp() {\n    this.tempValue = Number.parseInt(this.tempSlider.value);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DisplayTemperature);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRGlzcGxheVRlbXBlcmF0dXJlLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFFQSxNQUFNQSxrQkFBTixDQUF5QjtBQUNyQkMsRUFBQUEsV0FBVyxHQUFHO0FBQ1YsU0FBS0MsTUFBTCxHQUFjQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsZ0JBQXhCLENBQWQ7QUFDQSxTQUFLQyxHQUFMLEdBQVcsS0FBS0gsTUFBTCxDQUFZSSxVQUFaLENBQXVCLElBQXZCLENBQVg7QUFDQSxTQUFLQyxVQUFMLEdBQWtCSixRQUFRLENBQUNDLGNBQVQsQ0FBd0IsYUFBeEIsQ0FBbEI7QUFDQSxTQUFLSSxTQUFMLEdBQWlCQyxNQUFNLENBQUNDLFFBQVAsQ0FBZ0IsS0FBS0gsVUFBTCxDQUFnQkksS0FBaEMsQ0FBakI7QUFDQSxTQUFLQyxRQUFMO0FBQ0g7O0FBQ0RBLEVBQUFBLFFBQVEsR0FBRztBQUNQLFNBQUtKLFNBQUwsR0FBaUJDLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQixLQUFLSCxVQUFMLENBQWdCSSxLQUFoQyxDQUFqQjtBQUNIOztBQVZvQjs7QUFhekIsK0RBQWVYLGtCQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vSnNQcm9qZWN0Ly4vc3JjL0Rpc3BsYXlUZW1wZXJhdHVyZS5qcz9hYzY3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5jbGFzcyBEaXNwbGF5VGVtcGVyYXR1cmUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGlzcGxheS1jYW52YXNcIilcbiAgICAgICAgdGhpcy5jdHggPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICB0aGlzLnRlbXBTbGlkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlbXBlcmF0dXJlXCIpO1xuICAgICAgICB0aGlzLnRlbXBWYWx1ZSA9IE51bWJlci5wYXJzZUludCh0aGlzLnRlbXBTbGlkZXIudmFsdWUpO1xuICAgICAgICB0aGlzLmRyYXdUZW1wKCk7XG4gICAgfVxuICAgIGRyYXdUZW1wKCkge1xuICAgICAgICB0aGlzLnRlbXBWYWx1ZSA9IE51bWJlci5wYXJzZUludCh0aGlzLnRlbXBTbGlkZXIudmFsdWUpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGlzcGxheVRlbXBlcmF0dXJlIl0sIm5hbWVzIjpbIkRpc3BsYXlUZW1wZXJhdHVyZSIsImNvbnN0cnVjdG9yIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImN0eCIsImdldENvbnRleHQiLCJ0ZW1wU2xpZGVyIiwidGVtcFZhbHVlIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJ2YWx1ZSIsImRyYXdUZW1wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/DisplayTemperature.js\n");

/***/ }),

/***/ "./src/DisplayWeakLayer.js":
/*!*********************************!*\
  !*** ./src/DisplayWeakLayer.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass DisplayWeakLayer {\n  constructor() {\n    this.canvas = document.getElementById(\"display-canvas\");\n    this.ctx = this.canvas.getContext('2d');\n    this.weakLayer = false;\n    this.drawLayer();\n  }\n\n  drawLayer(slopeVal, snowVal) {\n    let peak = this.canvas.height / 3;\n    let weakValue = document.getElementById(\"weak-true\");\n    this.weakLayer = weakValue.checked;\n\n    if (this.weakLayer === true) {\n      this.ctx.moveTo(this.canvas.width / 5, peak - snowVal / 2);\n      this.ctx.lineTo(-6 * slopeVal + this.canvas.width, this.canvas.height - snowVal / 2); // this.ctx.lineTo(-6 * this.slopeVal + this.canvas.width, this.canvas.height)\n\n      this.ctx.stroke();\n    }\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DisplayWeakLayer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvRGlzcGxheVdlYWtMYXllci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBRUEsTUFBTUEsZ0JBQU4sQ0FBdUI7QUFDbkJDLEVBQUFBLFdBQVcsR0FBRztBQUNWLFNBQUtDLE1BQUwsR0FBY0MsUUFBUSxDQUFDQyxjQUFULENBQXdCLGdCQUF4QixDQUFkO0FBQ0EsU0FBS0MsR0FBTCxHQUFXLEtBQUtILE1BQUwsQ0FBWUksVUFBWixDQUF1QixJQUF2QixDQUFYO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixLQUFqQjtBQUNBLFNBQUtDLFNBQUw7QUFDSDs7QUFDREEsRUFBQUEsU0FBUyxDQUFDQyxRQUFELEVBQVdDLE9BQVgsRUFBb0I7QUFDekIsUUFBSUMsSUFBSSxHQUFHLEtBQUtULE1BQUwsQ0FBWVUsTUFBWixHQUFxQixDQUFoQztBQUNBLFFBQUlDLFNBQVMsR0FBR1YsUUFBUSxDQUFDQyxjQUFULENBQXdCLFdBQXhCLENBQWhCO0FBQ0EsU0FBS0csU0FBTCxHQUFpQk0sU0FBUyxDQUFDQyxPQUEzQjs7QUFDQSxRQUFJLEtBQUtQLFNBQUwsS0FBbUIsSUFBdkIsRUFBNkI7QUFDekIsV0FBS0YsR0FBTCxDQUFTVSxNQUFULENBQWdCLEtBQUtiLE1BQUwsQ0FBWWMsS0FBWixHQUFvQixDQUFwQyxFQUF1Q0wsSUFBSSxHQUFJRCxPQUFPLEdBQUcsQ0FBekQ7QUFDQSxXQUFLTCxHQUFMLENBQVNZLE1BQVQsQ0FBZ0IsQ0FBQyxDQUFELEdBQUtSLFFBQUwsR0FBZ0IsS0FBS1AsTUFBTCxDQUFZYyxLQUE1QyxFQUFtRCxLQUFLZCxNQUFMLENBQVlVLE1BQVosR0FBc0JGLE9BQU8sR0FBRyxDQUFuRixFQUZ5QixDQUd6Qjs7QUFDQSxXQUFLTCxHQUFMLENBQVNhLE1BQVQ7QUFDSDtBQUdKOztBQW5Ca0I7O0FBc0J2QiwrREFBZWxCLGdCQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vSnNQcm9qZWN0Ly4vc3JjL0Rpc3BsYXlXZWFrTGF5ZXIuanM/OTQ1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuY2xhc3MgRGlzcGxheVdlYWtMYXllciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkaXNwbGF5LWNhbnZhc1wiKVxuICAgICAgICB0aGlzLmN0eCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgIHRoaXMud2Vha0xheWVyID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZHJhd0xheWVyKCk7XG4gICAgfVxuICAgIGRyYXdMYXllcihzbG9wZVZhbCwgc25vd1ZhbCkge1xuICAgICAgICBsZXQgcGVhayA9IHRoaXMuY2FudmFzLmhlaWdodCAvIDM7XG4gICAgICAgIGxldCB3ZWFrVmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYWstdHJ1ZVwiKTtcbiAgICAgICAgdGhpcy53ZWFrTGF5ZXIgPSB3ZWFrVmFsdWUuY2hlY2tlZDtcbiAgICAgICAgaWYgKHRoaXMud2Vha0xheWVyID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0aGlzLmN0eC5tb3ZlVG8odGhpcy5jYW52YXMud2lkdGggLyA1LCBwZWFrIC0gKHNub3dWYWwgLyAyKSk7XG4gICAgICAgICAgICB0aGlzLmN0eC5saW5lVG8oLTYgKiBzbG9wZVZhbCArIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQgLSAoc25vd1ZhbCAvIDIpKTtcbiAgICAgICAgICAgIC8vIHRoaXMuY3R4LmxpbmVUbygtNiAqIHRoaXMuc2xvcGVWYWwgKyB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KVxuICAgICAgICAgICAgdGhpcy5jdHguc3Ryb2tlKCk7XG4gICAgICAgIH1cblxuXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBEaXNwbGF5V2Vha0xheWVyIl0sIm5hbWVzIjpbIkRpc3BsYXlXZWFrTGF5ZXIiLCJjb25zdHJ1Y3RvciIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0Iiwid2Vha0xheWVyIiwiZHJhd0xheWVyIiwic2xvcGVWYWwiLCJzbm93VmFsIiwicGVhayIsImhlaWdodCIsIndlYWtWYWx1ZSIsImNoZWNrZWQiLCJtb3ZlVG8iLCJ3aWR0aCIsImxpbmVUbyIsInN0cm9rZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/DisplayWeakLayer.js\n");

/***/ }),

/***/ "./src/DisplayWind.js":
/*!****************************!*\
  !*** ./src/DisplayWind.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DisplayWind; }\n/* harmony export */ });\nclass DisplayWind {\n  constructor(snowVal) {\n    this.canvas = document.getElementById(\"display-canvas\");\n    this.ctx = this.canvas.getContext('2d');\n    this.snowVal = snowVal;\n    this.windArray = [];\n    this.x = 0;\n    this.y = 0;\n    this.rotation = 0;\n    this.gravity = 0;\n    this.changeValue = 0;\n    this.sizeChange = 1;\n  }\n\n  drawWind(snowvalue, tempValue) {\n    this.snowVal = snowvalue;\n    let windSlider = document.getElementById(\"windspeed\");\n    this.windValue = Number.parseInt(windSlider.value); //old four lines\n    // if (this.windValue > 0){\n    //     let y = Math.random() * 4-7\n    //     this.ctx.moveTo(0, 50);\n    //     this.ctx.lineTo(150 + this.windValue / 2, 50 + y * this.windValue / 20);\n    //     this.ctx.moveTo(0, 100);\n    //     this.ctx.lineTo(100 + this.windValue / 2, 100+y*this.windValue/20);\n    //     this.ctx.moveTo(0, 150);\n    //     this.ctx.lineTo(50+this.windValue/1.5, 150+y*this.windValue/20);\n    //     this.ctx.moveTo(0, 200);\n    //     this.ctx.lineTo(this.windValue, 200+y*this.windValue/20);\n    //     this.ctx.stroke();\n    // }\n\n    for (let i = 0; i < this.windArray.length; i++) {\n      let val = this.windArray[i]; // this.ctx.moveTo(val.x1,val.y1);\n\n      this.ctx.beginPath();\n      this.ctx.arc(val.x1, val.y1, val.r, val.start, val.angle, false);\n      this.ctx.strokeStyle = \"white\";\n      this.ctx.stroke();\n      val.x1 += 5 * Math.random() * this.windValue / 40;\n      val.y1 -= 3 * Math.random() - val.gravity;\n      val.r -= .01;\n      val.start += .1 * Math.PI;\n      val.angle += .1 * Math.PI;\n      val.gravity += .02;\n    }\n\n    if (this.windValue > 25 && this.windArray.length < 100 && tempValue < 35) {\n      this.windArray.push({\n        x1: this.canvas.width / 5 + Math.random() * 10 - 15,\n        y1: this.canvas.height / 3 - this.snowVal + Math.random() * 10,\n        r: 9,\n        start: .5 * Math.PI,\n        angle: 1 * Math.PI,\n        gravity: 0\n      });\n    } else {\n      this.windArray.shift();\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixDQUFyQixHQUF5QixLQUFLdEMsT0FBOUIsR0FBd0NpQyxJQUFJLENBQUNDLE1BQUwsS0FBZ0IsRUFGNUM7QUFHaEJOLFFBQUFBLENBQUMsRUFBRSxDQUhhO0FBSWhCQyxRQUFBQSxLQUFLLEVBQUUsS0FBS0ksSUFBSSxDQUFDRSxFQUpEO0FBS2hCTCxRQUFBQSxLQUFLLEVBQUUsSUFBSUcsSUFBSSxDQUFDRSxFQUxBO0FBTWhCekIsUUFBQUEsT0FBTyxFQUFFO0FBTk8sT0FBcEI7QUFRSCxLQVRELE1BVUs7QUFDRCxXQUFLSixTQUFMLENBQWVpQyxLQUFmO0FBQ0g7QUFFSjs7QUF0RTRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vSnNQcm9qZWN0Ly4vc3JjL0Rpc3BsYXlXaW5kLmpzPzhlMDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGlzcGxheVdpbmQge1xuICAgIGNvbnN0cnVjdG9yKHNub3dWYWwpIHtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRpc3BsYXktY2FudmFzXCIpXG4gICAgICAgIHRoaXMuY3R4ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgdGhpcy5zbm93VmFsID0gc25vd1ZhbDtcbiAgICAgICAgdGhpcy53aW5kQXJyYXkgPSBbXTtcbiAgICAgICAgdGhpcy54ID0gMDtcbiAgICAgICAgdGhpcy55ID0gMFxuICAgICAgICB0aGlzLnJvdGF0aW9uID0gMDtcbiAgICAgICAgdGhpcy5ncmF2aXR5ID0gMDtcbiAgICAgICAgdGhpcy5jaGFuZ2VWYWx1ZSA9IDA7XG4gICAgICAgIHRoaXMuc2l6ZUNoYW5nZSA9IDE7XG4gICAgfVxuXG4gICAgZHJhd1dpbmQoc25vd3ZhbHVlLCB0ZW1wVmFsdWUpIHtcbiAgICAgICAgdGhpcy5zbm93VmFsID0gc25vd3ZhbHVlXG4gICAgICAgIGxldCB3aW5kU2xpZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3aW5kc3BlZWRcIik7XG4gICAgICAgIHRoaXMud2luZFZhbHVlID0gTnVtYmVyLnBhcnNlSW50KHdpbmRTbGlkZXIudmFsdWUpO1xuXG4gICAgICAgIC8vb2xkIGZvdXIgbGluZXNcblxuXG4gICAgICAgIC8vIGlmICh0aGlzLndpbmRWYWx1ZSA+IDApe1xuICAgICAgICAvLyAgICAgbGV0IHkgPSBNYXRoLnJhbmRvbSgpICogNC03XG4gICAgICAgIC8vICAgICB0aGlzLmN0eC5tb3ZlVG8oMCwgNTApO1xuICAgICAgICAvLyAgICAgdGhpcy5jdHgubGluZVRvKDE1MCArIHRoaXMud2luZFZhbHVlIC8gMiwgNTAgKyB5ICogdGhpcy53aW5kVmFsdWUgLyAyMCk7XG4gICAgICAgIC8vICAgICB0aGlzLmN0eC5tb3ZlVG8oMCwgMTAwKTtcbiAgICAgICAgLy8gICAgIHRoaXMuY3R4LmxpbmVUbygxMDAgKyB0aGlzLndpbmRWYWx1ZSAvIDIsIDEwMCt5KnRoaXMud2luZFZhbHVlLzIwKTtcbiAgICAgICAgLy8gICAgIHRoaXMuY3R4Lm1vdmVUbygwLCAxNTApO1xuICAgICAgICAvLyAgICAgdGhpcy5jdHgubGluZVRvKDUwK3RoaXMud2luZFZhbHVlLzEuNSwgMTUwK3kqdGhpcy53aW5kVmFsdWUvMjApO1xuICAgICAgICAvLyAgICAgdGhpcy5jdHgubW92ZVRvKDAsIDIwMCk7XG4gICAgICAgIC8vICAgICB0aGlzLmN0eC5saW5lVG8odGhpcy53aW5kVmFsdWUsIDIwMCt5KnRoaXMud2luZFZhbHVlLzIwKTtcbiAgICAgICAgLy8gICAgIHRoaXMuY3R4LnN0cm9rZSgpO1xuICAgICAgICAvLyB9XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLndpbmRBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IHZhbCA9IHRoaXMud2luZEFycmF5W2ldXG4gICAgICAgICAgICAvLyB0aGlzLmN0eC5tb3ZlVG8odmFsLngxLHZhbC55MSk7XG4gICAgICAgICAgICB0aGlzLmN0eC5iZWdpblBhdGgoKVxuICAgICAgICAgICAgdGhpcy5jdHguYXJjKFxuICAgICAgICAgICAgICAgIHZhbC54MSxcbiAgICAgICAgICAgICAgICB2YWwueTEsXG4gICAgICAgICAgICAgICAgdmFsLnIsXG4gICAgICAgICAgICAgICAgdmFsLnN0YXJ0LFxuICAgICAgICAgICAgICAgIHZhbC5hbmdsZSxcbiAgICAgICAgICAgICAgICBmYWxzZVxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgdGhpcy5jdHguc3Ryb2tlU3R5bGUgPSBcIndoaXRlXCI7XG4gICAgICAgICAgICB0aGlzLmN0eC5zdHJva2UoKTtcbiAgICAgICAgICAgIHZhbC54MSArPSA1ICogTWF0aC5yYW5kb20oKSAqIHRoaXMud2luZFZhbHVlIC8gNDA7XG4gICAgICAgICAgICB2YWwueTEgLT0gMyAqIE1hdGgucmFuZG9tKCkgLSB2YWwuZ3Jhdml0eTtcbiAgICAgICAgICAgIHZhbC5yIC09IC4wMVxuICAgICAgICAgICAgdmFsLnN0YXJ0ICs9IC4xICogTWF0aC5QSVxuICAgICAgICAgICAgdmFsLmFuZ2xlICs9IC4xICogTWF0aC5QSVxuICAgICAgICAgICAgdmFsLmdyYXZpdHkgKz0gLjAyXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMud2luZFZhbHVlID4gMjUgJiYgdGhpcy53aW5kQXJyYXkubGVuZ3RoIDwgMTAwICYmIHRlbXBWYWx1ZSA8IDM1KSB7XG4gICAgICAgICAgICB0aGlzLndpbmRBcnJheS5wdXNoKHtcbiAgICAgICAgICAgICAgICB4MTogdGhpcy5jYW52YXMud2lkdGggLyA1ICsgTWF0aC5yYW5kb20oKSAqIDEwIC0gMTUsXG4gICAgICAgICAgICAgICAgeTE6IHRoaXMuY2FudmFzLmhlaWdodCAvIDMgLSB0aGlzLnNub3dWYWwgKyBNYXRoLnJhbmRvbSgpICogMTAsXG4gICAgICAgICAgICAgICAgcjogOSxcbiAgICAgICAgICAgICAgICBzdGFydDogLjUgKiBNYXRoLlBJLFxuICAgICAgICAgICAgICAgIGFuZ2xlOiAxICogTWF0aC5QSSxcbiAgICAgICAgICAgICAgICBncmF2aXR5OiAwXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy53aW5kQXJyYXkuc2hpZnQoKVxuICAgICAgICB9XG5cbiAgICB9XG59Il0sIm5hbWVzIjpbIkRpc3BsYXlXaW5kIiwiY29uc3RydWN0b3IiLCJzbm93VmFsIiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImN0eCIsImdldENvbnRleHQiLCJ3aW5kQXJyYXkiLCJ4IiwieSIsInJvdGF0aW9uIiwiZ3Jhdml0eSIsImNoYW5nZVZhbHVlIiwic2l6ZUNoYW5nZSIsImRyYXdXaW5kIiwic25vd3ZhbHVlIiwidGVtcFZhbHVlIiwid2luZFNsaWRlciIsIndpbmRWYWx1ZSIsIk51bWJlciIsInBhcnNlSW50IiwidmFsdWUiLCJpIiwibGVuZ3RoIiwidmFsIiwiYmVnaW5QYXRoIiwiYXJjIiwieDEiLCJ5MSIsInIiLCJzdGFydCIsImFuZ2xlIiwic3Ryb2tlU3R5bGUiLCJzdHJva2UiLCJNYXRoIiwicmFuZG9tIiwiUEkiLCJwdXNoIiwid2lkdGgiLCJoZWlnaHQiLCJzaGlmdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/DisplayWind.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/index.scss */ \"./src/styles/index.scss\");\n/* harmony import */ var _DisplayMountain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DisplayMountain.js */ \"./src/DisplayMountain.js\");\n/* harmony import */ var _DisplayPrecipitation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DisplayPrecipitation.js */ \"./src/DisplayPrecipitation.js\");\n/* harmony import */ var _DisplayTemperature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DisplayTemperature.js */ \"./src/DisplayTemperature.js\");\n/* harmony import */ var _DisplayWeakLayer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DisplayWeakLayer.js */ \"./src/DisplayWeakLayer.js\");\n/* harmony import */ var _DisplayWind_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DisplayWind.js */ \"./src/DisplayWind.js\");\n// import { random } from \"core-js/core/number\";\n\n // import DisplaySnow from './DisplaySnow.js'\n// import TextBox from './textbox.js'\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  class DisplaySnow {\n    constructor(slopeVal) {\n      this.canvas = document.getElementById(\"snow-canvas\");\n      this.snowSlider = document.getElementById(\"snow\");\n      this.snowValue = this.snowSlider.value;\n      this.snowVal = Number.parseInt(this.snowValue);\n      this.snowCords = {\n        topRCornerX: -6 * slopeVal + this.canvas.width,\n        topRCornerY: this.canvas.height - this.snowVal,\n        bottomRCornerX: -6 * slopeVal + this.canvas.width + 6,\n        bottomRCornerY: this.canvas.height\n      };\n      this.xSpeed = 10;\n      this.move = false;\n      this.end = false;\n      this.moveRoller = false;\n      this.rollerBalls = []; // this.createRollerBalls();\n\n      this.drawSnow();\n    }\n\n    drawSnow(slopeVal) {\n      this.ctx = this.canvas.getContext('2d');\n      let peak = this.canvas.height / 3;\n\n      if (!this.move) {\n        this.snowCords = {\n          topRCornerX: -6 * slopeVal + this.canvas.width,\n          topRCornerY: this.canvas.height - this.snowVal,\n          bottomRCornerX: -6 * slopeVal + this.canvas.width + 6,\n          bottomRCornerY: this.canvas.height,\n          topLCornerX: this.canvas.width / 5,\n          topLCornerY: peak - this.snowVal,\n          bottomLCornerX: this.canvas.width / 5,\n          bottomLCornerY: peak,\n          round: 0\n        };\n      }\n\n      this.snowSlider = document.getElementById(\"snow\");\n      this.snowValue = this.snowSlider.value;\n      this.snowVal = Number.parseInt(this.snowValue);\n\n      if (this.move && this.snowCords.topRCornerX < this.canvas.width && slopeVal > 29 && slopeVal < 60) {\n        this.snowCords.bottomRCornerX += this.xSpeed;\n        this.snowCords.topRCornerX += this.xSpeed;\n        this.snowCords.topLCornerX += this.xSpeed;\n        this.snowCords.bottomLCornerX += this.xSpeed;\n        this.snowCords.topLCornerY += 2 / 3 * this.canvas.height / (4 / 5 * this.canvas.width - 6 * slopeVal) * this.xSpeed;\n        this.snowCords.bottomLCornerY += 2 / 3 * this.canvas.height / (4 / 5 * this.canvas.width - 6 * slopeVal) * this.xSpeed;\n\n        if (this.xSpeed > 1) {\n          this.xSpeed -= .3;\n        } else if (this.xSpeed < 1 && this.xSpeed > 0) {\n          this.xSpeed -= .03;\n        } else {\n          this.xSpeed = 0;\n        }\n\n        if (this.snowCords.topRCornerX > this.canvas.width || this.xSpeed === 0) {\n          this.end = true; // this.moveRoller = true; \n        }\n\n        if (this.xSpeed < 1) {//this.moveRoller = true; \n        }\n      } else if (this.move && this.xSpeed === 10) {\n        this.moveRoller = true;\n        this.end = true;\n      } //Slope Description\n\n\n      if (slopeVal > 70 && slopeVal <= 75) {\n        this.snowVal /= 1.5;\n      } else if (slopeVal > 75 && slopeVal <= 80) {\n        this.snowVal /= 2;\n      } else if (slopeVal > 80) {\n        this.snowVal /= 2.5;\n      } else if (slopeVal < 30) {}\n\n      let slope = 2 / 3 * this.canvas.height / (4 / 5 * this.canvas.width - 6 * slopeVal);\n\n      if (!this.move) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(0, 2 / 3 * this.canvas.height - this.snowVal);\n        this.ctx.lineTo(this.canvas.width / 5, peak - this.snowVal);\n        this.ctx.lineTo(this.snowCords.topRCornerX, this.canvas.height - this.snowVal);\n        this.ctx.lineTo(this.snowCords.bottomRCornerX, this.canvas.height);\n        this.ctx.lineTo(this.snowCords.bottomRCornerX, this.canvas.height);\n        this.ctx.lineTo(-6 * slopeVal + this.canvas.width, this.canvas.height);\n        this.ctx.lineTo(this.canvas.width / 5, peak);\n        this.ctx.lineTo(0, 2 / 3 * this.canvas.height);\n        this.ctx.lineTo(0, 2 / 3 * this.canvas.height - this.snowVal);\n        this.ctx.fillStyle = 'white';\n        this.ctx.fill();\n        this.ctx.stroke();\n      } else {\n        this.moveRoller = true;\n        this.ctx.beginPath();\n        this.ctx.moveTo(0, 2 / 3 * this.canvas.height - this.snowVal);\n        this.ctx.lineTo(this.canvas.width / 5, peak - this.snowVal);\n        this.ctx.lineTo(this.canvas.width / 5, peak);\n        this.ctx.lineTo(0, 2 / 3 * this.canvas.height);\n        this.ctx.fillStyle = 'white';\n        this.ctx.fill();\n        this.ctx.stroke();\n        this.ctx.beginPath();\n        let slopeDown = 1; // let sloper2 = 0;\n        // for (let i = 0; i < 50; i++) {\n        //     this.ctx.lineTo(this.snowCords.topLCornerX - i, this.snowCords.topLCornerY - i * slope - sloper2);\n        //     sloper2 += .01;\n        // }\n        // this.ctx.moveTo(his.snowCords.topLCornerX-1, this.snowCords.topLCornerY - 1*slope);\n\n        this.ctx.moveTo(this.snowCords.topLCornerX, this.snowCords.topLCornerY + 1);\n        let val = 0;\n        let ychange = 0;\n        let yychange = 0;\n        let sloper = .6;\n        let otherVal = this.snowVal * 2;\n\n        if (slopeVal > 29 && slopeVal < 60) {\n          for (let i = 0; i < 400; i++) {\n            val += 1 + ychange;\n\n            if (this.snowCords.topLCornerY + val * slope + ychange < this.canvas.height - this.snowVal * 3) {\n              this.ctx.lineTo(this.snowCords.topLCornerX + i, this.snowCords.topLCornerY + val * slope + ychange);\n\n              if (i % 10 === 0) {\n                yychange = -.015;\n              } else {\n                yychange = .0015;\n              }\n\n              ychange += yychange;\n            } else {\n              this.ctx.lineTo(this.snowCords.topLCornerX + i, this.canvas.height - this.snowVal - otherVal);\n\n              if (otherVal > 1) {\n                otherVal -= sloper;\n\n                if (sloper > .15) {\n                  sloper -= .01;\n                } else {\n                  sloper -= .0001;\n                }\n              } else {\n                otherVal = 1;\n              }\n            }\n          }\n        } // this.ctx.lineTo(-6 * slopeVal + this.canvas.width, this.canvas.height - this.snowVal - this.snowCords.round);\n\n\n        this.ctx.lineTo(this.snowCords.topRCornerX, this.canvas.height - this.snowVal);\n        this.ctx.lineTo(this.snowCords.bottomRCornerX, this.canvas.height);\n        this.ctx.lineTo(-6 * slopeVal + this.canvas.width, this.canvas.height); // this.ctx.lineTo(this.snowCords.bottomRCornerX, this.canvas.height);\n\n        this.ctx.lineTo(this.snowCords.bottomLCornerX, this.snowCords.bottomLCornerY);\n        this.ctx.lineTo(this.canvas.width / 5, peak); // this.ctx.lineTo(this.snowCords.topLCornerX - 3, this.snowCords.topLCornerY - 3 * slope);\n        // this.ctx.lineTo(this.snowCords.topLCornerX - 2, this.snowCords.topLCornerY - 2*slope);\n        // this.ctx.lineTo(this.snowCords.topLCornerX-1, this.snowCords.topLCornerY - 1*slope);\n\n        this.ctx.lineTo(this.snowCords.topLCornerX, this.snowCords.topLCornerY + 1);\n        this.ctx.fillStyle = 'white';\n        this.ctx.fill();\n        this.ctx.stroke();\n      }\n\n      if (slopeVal > 29 && slopeVal < 60) {\n        if (this.snowCords.round < 5) {\n          this.snowCords.round += .3;\n        } else if (this.snowCords.round < 20) {\n          this.snowCords.round += .2;\n        } else if (this.snowCords.round < 30) {\n          this.snowCords.round += .1;\n        } else {\n          this.snowCords.round += 0;\n        }\n      }\n    }\n\n    moveSnow() {\n      this.move = true; // this.snowCords.topLCornerX += xSpeed;\n      // this.snowCords.bottomLCornerX += xSpeed;\n    }\n\n    moveRollerBalls() {\n      if (this.moveRoller) {\n        for (let i = 0; i < this.rollerBalls.length; i++) {\n          let roller = this.rollerBalls[i];\n          this.ctx.beginPath();\n          this.ctx.arc(roller.x, roller.y, roller.r, roller.start, roller.angle, false); // this.ctx.stroke();\n\n          this.ctx.fill();\n          roller.x += 1;\n        }\n      }\n    }\n\n    createRollerBalls() {\n      for (let i = 0; i < 100; i++) {\n        this.rollerBalls.push({\n          x: this.canvas.width / 5 + 5,\n          y: this.canvas.height / 3,\n          r: 10,\n          start: 0,\n          angle: 2 * Math.PI\n        });\n      }\n    }\n\n  } // class DisplayWind{\n  //     constructor(snowVal){\n  //         this.canvas = document.getElementById(\"display-canvas\")\n  //         this.ctx = this.canvas.getContext('2d');\n  //         this.snowVal = snowVal;\n  //         this.windArray = [];\n  //         this.x=0;\n  //         this.y=0\n  //         this.rotation = 0;\n  //         this.gravity=0;\n  //         this.changeValue = 0;\n  //         this.sizeChange = 1;\n  //     }\n  //     drawWind(snowvalue,tempValue){\n  //         this.snowVal = snowvalue\n  //         let windSlider = document.getElementById(\"windspeed\");\n  //         this.windValue = Number.parseInt(windSlider.value);\n  //         //old four lines\n  //         // if (this.windValue > 0){\n  //         //     let y = Math.random() * 4-7\n  //         //     this.ctx.moveTo(0, 50);\n  //         //     this.ctx.lineTo(150 + this.windValue / 2, 50 + y * this.windValue / 20);\n  //         //     this.ctx.moveTo(0, 100);\n  //         //     this.ctx.lineTo(100 + this.windValue / 2, 100+y*this.windValue/20);\n  //         //     this.ctx.moveTo(0, 150);\n  //         //     this.ctx.lineTo(50+this.windValue/1.5, 150+y*this.windValue/20);\n  //         //     this.ctx.moveTo(0, 200);\n  //         //     this.ctx.lineTo(this.windValue, 200+y*this.windValue/20);\n  //         //     this.ctx.stroke();\n  //         // }\n  //         for (let i=0;i<this.windArray.length;i++){\n  //             let val  = this.windArray[i]\n  //             // this.ctx.moveTo(val.x1,val.y1);\n  //             this.ctx.beginPath()\n  //             this.ctx.arc (\n  //                 val.x1,\n  //                 val.y1,\n  //                 val.r,\n  //                 val.start,\n  //                 val.angle,\n  //                 false\n  //                 )\n  //             this.ctx.stroke();\n  //             val.x1 += 5 * Math.random()*this.windValue/40;\n  //             val.y1 -= 3 * Math.random() - val.gravity;\n  //             val.r -= .01\n  //             val.start += .1 * Math.PI\n  //             val.angle += .1 * Math.PI\n  //             val.gravity += .02\n  //         }\n  //         if (this.windValue > 25 && this.windArray.length < 100 && tempValue < 35){\n  //                 this.windArray.push({\n  //                     x1: this.canvas.width / 5 + Math.random()*10 -15,\n  //                     y1: this.canvas.height / 3 - this.snowVal + Math.random()*10,\n  //                     r: 5,\n  //                     start: .5 * Math.PI,\n  //                     angle: 1 * Math.PI,\n  //                     gravity: 0\n  //                 })\n  //             }\n  //         else {\n  //             this.windArray.shift()\n  //         }\n  //     }\n  // }\n\n\n  class TextBox {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.createText();\n    }\n\n    createText() {\n      let tempSlider = document.getElementById(\"temperature\");\n      let tempValue = Number.parseInt(tempSlider.value);\n      let windSlider = document.getElementById(\"windspeed\");\n      let windValue = Number.parseInt(windSlider.value);\n      let snowSlider = document.getElementById(\"snow\");\n      let snowValue = Number.parseInt(snowSlider.value);\n      let slopeSlider = document.getElementById(\"slope\");\n      let slopeValue = slopeSlider.value;\n      let weakValue = document.getElementById(\"weak-true\");\n      let weakLayer = weakValue.checked;\n      let precValue = document.getElementById(\"prec-true\").checked;\n\n      if (slopeValue < 30 || slopeValue > 60) {\n        outofrange.style.display = \"flex\";\n        lowsnow.style.display = \"none\";\n        wet.style.display = \"none\";\n        persistent.style.display = \"none\";\n        precipitation.style.display = \"none\";\n        windloaded.style.display = \"none\";\n      } else {\n        outofrange.style.display = \"none\";\n\n        if (snowValue < 10) {\n          outofrange.style.display = \"none\";\n          lowsnow.style.display = \"flex\";\n          wet.style.display = \"none\";\n          persistent.style.display = \"none\";\n          precipitation.style.display = \"none\";\n          windloaded.style.display = \"none\";\n        } else {\n          lowsnow.style.display = \"none\";\n\n          if (weakLayer && tempValue < 40) {\n            persistent.style.display = \"flex\";\n            precipitation.style.display = \"none\";\n            windloaded.style.display = \"none\";\n            wet.style.display = \"none\";\n          } else {\n            persistent.style.display = \"none\";\n\n            if (tempValue > 40) {\n              wet.style.display = \"flex\";\n              persistent.style.display = \"none\";\n              precipitation.style.display = \"none\";\n              windloaded.style.display = \"none\";\n            } else {\n              wet.style.display = \"none\";\n            }\n          }\n\n          if (precValue && tempValue < 35) {\n            persistent.style.display = \"none\";\n            precipitation.style.display = \"flex\";\n            windloaded.style.display = \"none\";\n            wet.style.display = \"none\";\n          } else {\n            precipitation.style.display = \"none\";\n          }\n\n          if (windValue > 30 && tempValue < 40) {\n            persistent.style.display = \"none\";\n            precipitation.style.display = \"none\";\n            windloaded.style.display = \"flex\";\n            wet.style.display = \"none\";\n          } else {\n            windloaded.style.display = \"none\";\n          }\n        }\n      }\n    }\n\n  }\n\n  class DisplayCanvas {\n    constructor() {\n      this.canvas = document.getElementById(\"display-canvas\");\n      this.ctx = this.canvas.getContext('2d');\n      this.snowcanvas = document.getElementById(\"snow-canvas\");\n      this.snowctx = this.snowcanvas.getContext('2d');\n      this.weathercanvas = document.getElementById(\"weather-canvas\");\n      this.weatherctx = this.weathercanvas.getContext('2d');\n      this.animate = this.animate.bind(this);\n      this.tempCanvas = new _DisplayTemperature_js__WEBPACK_IMPORTED_MODULE_3__.default();\n      this.weakLayer = new _DisplayWeakLayer_js__WEBPACK_IMPORTED_MODULE_4__.default();\n      this.snowflakes = new _DisplayPrecipitation_js__WEBPACK_IMPORTED_MODULE_2__.default();\n      this.textbox = new TextBox();\n      this.mountainCanvas = new _DisplayMountain_js__WEBPACK_IMPORTED_MODULE_1__.default();\n      this.snowCanvas = new DisplaySnow(this.mountainCanvas.slopeVal);\n      this.windCanvas = new _DisplayWind_js__WEBPACK_IMPORTED_MODULE_5__.default(this.snowCanvas.snowVal);\n    }\n\n    animate() {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.snowctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.weatherctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.mountainCanvas.drawMountain(this.snowCanvas.end);\n      this.windCanvas.drawWind(this.snowCanvas.snowVal, this.tempCanvas.tempValue);\n      this.tempCanvas.drawTemp();\n      this.textbox.createText();\n      this.weakLayer.drawLayer(this.mountainCanvas.slopeVal, this.snowCanvas.snowVal);\n      this.snowflakes.drawPrec(this.windCanvas.windValue, this.tempCanvas.tempValue);\n      const initiate = document.getElementById(\"submit\");\n      let snowCanvas = this.snowCanvas;\n      this.snowCanvas.drawSnow(this.mountainCanvas.slopeVal);\n      this.snowCanvas.moveRollerBalls();\n\n      initiate.onclick = function () {\n        snowCanvas.moveSnow();\n      };\n\n      requestAnimationFrame(this.animate);\n    }\n\n  }\n\n  let displayCanvas = new DisplayCanvas();\n  displayCanvas.animate();\n  const reset = document.getElementById(\"reset\");\n\n  reset.onclick = function () {\n    let resetCanvas = new DisplayCanvas();\n    resetCanvas.animate();\n  }; // let mountainCanvas = new displayMountain;\n  // mountainCanvas.animate();\n\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Kc1Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./src/styles/index.scss":
/*!*******************************!*\
  !*** ./src/styles/index.scss ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL2luZGV4LnNjc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vSnNQcm9qZWN0Ly4vc3JjL3N0eWxlcy9pbmRleC5zY3NzP2FlOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;